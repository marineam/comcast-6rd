#!/bin/bash
#
# Michael Marineau's automagic Comcast 6rd tunnel setup script.
#
# You are free to use/change/copy this script however you like.
#
# This script does the following:
# 1. Create the 6rd tunnel.
# 2. Write the IPv6 prefix as a bind acl block to a file for named's use.
# 3. Write out a config for radvd and start it up.
# 4. Submit the IPv4 and IPv6 addresses to dhis.org (a dynamic dns service)
#
# Chances are that if you wish to use this script yourself you will
# probably just want to delete the bind and dhis bits but they are there
# if you want them. :-)
#
# This script has been tested on Ubuntu Lucid which needs the kernel and
# iproute2 from Maverick. The kernel is in Ubuntu's lucid-updates repo as
# linux-image-server-lts-backport-maverick and iproute2 is available from
# ppa:nathan-launchpad/iproute-lucid-ppa (see http://www.litech.org/6rd/).
#
# Originally based on a script at:
# http://www.linux.com/learn/tutorials/371742:ipv6-6rd-linux-router-on-comcast-using-ubuntu-maverick-1010

# For testing only:
# reason=BOUND
# interface=eth0
# new_ip_address=98.229.69.81

WANIF=eth0
LANIF=br1
SIXRDTUNIF=6rd
SIXRDTUNMTU=1280
SIXRDTUNTTL=64
WAN4IP=${new_ip_address:-$old_ip_address}
ISP6RDPREFIX='2001:55c'
ISP6RDPREFIXLEN=32
ISP6RDBR=$(dig +short 6rd.comcast.net)
WAN4MASKLEN=0
LOCAL6PREFIX=$(printf "$ISP6RDPREFIX:%02x%02x:%02x%02x" $(echo $WAN4IP | tr . ' '))
LOCAL6PREFIXLEN=64
LOCAL6TUNIP="$LOCAL6PREFIX:0::1"
LOCAL6LANIP="$LOCAL6PREFIX:1::1"
NAMEDLAN6ACL="/etc/bind/named.conf.6rd"
RADVDCONF="/etc/radvd.conf"
DHISURL="http://?????@is.dhis.org/"

sixrd_setup_dhis() {
    wget -4 -q -O - "$DHISURL?UpdateTimeout=0&IPAddr=$WAN4IP"
    wget -6 -q -O - "$DHISURL?UpdateTimeout=0&IPAddr=$LOCAL6TUNIP"
}

sixrd_setup_bind() {
    local acl="acl lan6 { $1; };"
    if ! echo "$acl" | cmp -s - $NAMEDLAN6ACL; then
        echo "$acl" > $NAMEDLAN6ACL
        /etc/init.d/bind9 reload || /etc/init.d/bind9 start
    fi
}

sixrd_setup_radvd() {
    local conf="# Generated by comcast-6rd-tunnel
interface $LANIF {
    AdvSendAdvert on;
    AdvLinkMTU 1280;

    # Advertise at least every 30 seconds
    MaxRtrAdvInterval 30;

    prefix $LOCAL6LANIP/$LOCAL6PREFIXLEN {
        AdvOnLink on;
        AdvAutonomous on;
        AdvRouterAddr on;

        # Very short lifetimes for dynamic addresses
        AdvValidLifetime 600;
        AdvPreferredLifetime 300;
    };

    RDNSS $LOCAL6LANIP {
        AdvRDNSSLifetime 60;
    };
};"
    if ! echo "$conf" | cmp -s - $RADVDCONF; then
        echo "$conf" > $RADVDCONF
        /etc/init.d/radvd reload || /etc/init.d/radvd start
    fi
}

sixrd_configs_add() {
    sixrd_setup_bind $LOCAL6PREFIX::/$LOCAL6PREFIXLEN
    sixrd_setup_radvd
    sixrd_setup_dhis
}

sixrd_configs_remove() {
    sixrd_setup_bind none
    rm -f $RADVDCONF
    /etc/init.d/radvd stop
}

sixrd_setup_add() {
	logger -p daemon.info -t dhclient "Starting 6RD tunnel on $interface."
    # Setup the tunnel interface
    ip tunnel add $SIXRDTUNIF mode sit local $WAN4IP ttl $SIXRDTUNTTL
    # This is the magic virtually undocumented 6rd sauce
    # This makes it a 6rd tunnel by specifiying the ISPs PREFIX 
    # rather than 2002::/16 the "generic" 6to4 prefix
    ip tunnel 6rd dev $SIXRDTUNIF 6rd-prefix $ISP6RDPREFIX::/$ISP6RDPREFIXLEN 
    # Set the MTU 
    ip link set $SIXRDTUNIF mtu $SIXRDTUNMTU
    # Bring up the tunnel interface
    ip link set $SIXRDTUNIF up
    # Set the tunnel interface IPv6 address
    ip -6 addr add $LOCAL6TUNIP/$ISP6RDPREFIXLEN dev $SIXRDTUNIF
    # Set the LAN interface IPv6 address
    ip -6 addr add $LOCAL6LANIP/$LOCAL6PREFIXLEN dev $LANIF
    # Set the default IPv6 route to the ISP's IPv4/IPv6 boarder router
    ip -6 route add ::/0 via ::$ISP6RDBR dev $SIXRDTUNIF
}

sixrd_setup_remove() {
	logger -p daemon.info -t dhclient "Stopping 6RD tunnel on $interface."
    # Remove the tunnel interface and related addresses
    ip -6 addr del $LOCAL6LANIP/$LOCAL6PREFIXLEN dev $LANIF
    ip tunnel del $SIXRDTUNIF
}

sixrd_setup() {
    if [ $interface != $WANIF ]; then
		logger -p daemon.info -t dhclient "Skipping 6RD setup for $interface."
        return
    fi
	case $reason in
		BOUND|REBOOT)
			sixrd_setup_add
            sixrd_configs_add
			;;
		RENEW|REBIND)
            if [ "$new_ip_address" != "$old_ip_address" ]; then
			    sixrd_setup_remove
                sixrd_setup_add
                sixrd_configs_add
            fi
            ;;
		EXPIRE|FAIL|RELEASE)
            sixrd_configs_remove
			sixrd_setup_remove
			;;
		STOP)
			sixrd_setup_remove
            ;;
	esac
}

sixrd_setup
