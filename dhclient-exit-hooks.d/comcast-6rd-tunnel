#!/bin/bash
#
# Michael Marineau's automagic Comcast 6rd tunnel setup script.
#
# You are free to use/change/copy this script however you like.
#
# This script creates the 6rd tunnel and runs extra scripts in start.d
# which handle things like radvd and dynamic dns.
#
# I am sure you will have your own magic for your local network but this
# should be a good starting point for many uses. :-)
#
# This script has been tested on Ubuntu Lucid which needs the kernel and
# iproute2 from Maverick. The kernel is in Ubuntu's lucid-updates repo as
# linux-image-server-lts-backport-maverick and iproute2 is available from
# ppa:nathan-launchpad/iproute-lucid-ppa (see http://www.litech.org/6rd/).
#
# Originally based on a script at:
# http://www.linux.com/learn/tutorials/371742:ipv6-6rd-linux-router-on-comcast-using-ubuntu-maverick-1010

# For testing only:
# reason=BOUND
# interface=eth0
# new_ip_address=192.0.2.1

servers="${new_domain_name_servers:-${old_domain_name_servers}}"
digargs=""
if [ -n "$servers" ]; then
    digargs="@${servers/ / @}"
fi

export WANIF=eth0
export LANIF=br1
export SIXRDTUNIF=6rd
export SIXRDTUNMTU=1480
export SIXRDTUNTTL=64
export WAN4IP=${new_ip_address:-$old_ip_address}
export ISP6RDPREFIX='2001:55c'
export ISP6RDPREFIXLEN=32
export ISP6RDBR=$(dig +short 6rd.comcast.net $digargs)
export WAN4MASKLEN=0
export LOCAL6PREFIX=$(printf "$ISP6RDPREFIX:%02x%02x:%02x%02x" ${WAN4IP//./ })
export LOCAL6PREFIXLEN=64
export LOCAL6IP="$LOCAL6PREFIX::1"
STARTDIR="/etc/dhcp3/comcast-6rd-start.d"
STOPDIR="/etc/dhcp3/comcast-6rd-stop.d"

sixrd_setup_add() {
    logger -p daemon.info -t dhclient "Starting 6RD tunnel on $interface."
    # Setup the tunnel interface
    ip tunnel add $SIXRDTUNIF mode sit local $WAN4IP ttl $SIXRDTUNTTL
    # This is the magic virtually undocumented 6rd sauce
    # This makes it a 6rd tunnel by specifiying the ISPs PREFIX 
    # rather than 2002::/16 the "generic" 6to4 prefix
    ip tunnel 6rd dev $SIXRDTUNIF 6rd-prefix $ISP6RDPREFIX::/$ISP6RDPREFIXLEN 
    # Set the MTU 
    ip link set $SIXRDTUNIF mtu $SIXRDTUNMTU
    # Bring up the tunnel interface
    ip link set $SIXRDTUNIF up
    # Set the IPv6 address for the tunnel/LAN interfaces
    ip -6 addr add $LOCAL6IP/128 dev $SIXRDTUNIF
    ip -6 addr add $LOCAL6IP/$LOCAL6PREFIXLEN dev $LANIF
    # Set the default IPv6 route to the ISP's IPv4/IPv6 boarder router
    ip -6 route add ::/0 via ::$ISP6RDBR dev $SIXRDTUNIF
}

sixrd_setup_remove() {
    logger -p daemon.info -t dhclient "Stopping 6RD tunnel on $interface."
    # Remove the tunnel interface and related addresses
    ip -6 addr del $LOCAL6IP/$LOCAL6PREFIXLEN dev eth1
    ip tunnel del $SIXRDTUNIF
}

sixrd_run() {
    run-parts --regex '.*' --report -- "$1"
}

sixrd_setup() {
    if [ $interface != $WANIF ]; then
        logger -p daemon.info -t dhclient "Skipping 6RD setup for $interface."
        return
    fi
    case $reason in
        BOUND|REBOOT)
            sixrd_setup_add
            sixrd_run "$STARTDIR"
            ;;
        RENEW|REBIND)
            if [ "$new_ip_address" != "$old_ip_address" ]; then
                sixrd_setup_remove
                sixrd_setup_add
                sixrd_run "$STARTDIR"
            fi
            ;;
        STOP|EXPIRE|FAIL|RELEASE)
            sixrd_run "$STOPDIR"
            sixrd_setup_remove
            ;;
    esac
}

sixrd_setup
